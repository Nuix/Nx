def releasePath = "Nx\\engine\\release"
def dependencyRepo = "https://artifactory.uat.nuix.com/artifactory/rest-maven-virtual"
def engineMajorMinor = "9.10"
def enginePointRelease = "17.1073"
def engineOs = "win32-amd64"
def engineExtension = "zip"
def engineRepo = "https://artifactory.uat.nuix.com/artifactory/builds-syd/nuix-engine"
def downloadPath = "Nx\\engine\\download"

pipeline {
    agent {
        label 'windows-2019'
    }

    parameters {
        string(name: 'NxVersion', defaultValue: '1.20', description: 'Set the MAJOR.MINOR version of the NX Jar being built.')
    }

    environment {
        PROJ_VERSION="${params.NxVersion}.${BUILD_NUMBER}"

        TEST_TEMP_PATH = "${WORKSPACE}\\Temp"

    }

    stages {
        stage("Run") {
            tools {
                jdk 'Eclipse Adoptium 11'
            }
            stages {
                stage("Get Engine") {
                    steps{
                        fileOperations([
                                folderCreateOperation(downloadPath),
                                folderCreateOperation(releasePath)])
                        bat "curl -L --url ${engineRepo}/${engineMajorMinor}/engine-dist-${engineOs}-${engineMajorMinor}.${enginePointRelease}.${engineExtension} -o ${downloadPath}\\engine.zip"
                        fileOperations([
                                fileUnZipOperation(filePath: "${downloadPath}\\engine.zip",
                                        targetLocation: releasePath)])
                    }
                }
                stage("Build") {
                    steps {
                        dir("${WORKSPACE}\\NX") {
                            bat "call gradlew -PnuixDependencyRepo=\"${dependencyRepo}\" -PnuixEngineDir=\"${WORKSPACE}\\${releasePath}\" clean"
                            bat "call gradlew -PnuixDependencyRepo=\"${dependencyRepo}\" -PnuixEngineDir=\"${WORKSPACE}\\${releasePath}\" classes"
                            bat "call gradlew -PnuixDependencyRepo=\"${dependencyRepo}\" -PnuixEngineDir=\"${WORKSPACE}\\${releasePath}\" testClasses"
                        }
                    }
                }

                stage("Unit Tests") {
                    environment {
                        RUN_PATH = "${downloadPath}\\jre;${downloadPath}\\jre\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\OpenSSH-Win64"
                    }
                    steps {
                        fileOperations([folderCreateOperation(env.TEST_TEMP_PATH)])
                        withCredentials([usernamePassword(credentialsId: 'REST-Service_CLS',
                                passwordVariable: 'NUIX_PASSWORD',
                                usernameVariable: 'NUIX_USERNAME')]) {

                            dir("${WORKSPACE}\\NX\\engine\\release\\user-data\\SecretStore") {
                                bat "call powershell Get-Acl"
                            }
                            dir("${WORKSPACE}\\NX") {
                                bat "call gradlew -PnuixDependencyRepo=\"${dependencyRepo}\" -PnuixEngineDir=\"${WORKSPACE}\\${releasePath}\" -PtempDir=\"${TEST_TEMP_PATH}\" test"
                            }
                        }
                    }
                }

                stage("Integration Tests") {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'REST-Service_CLS',
                                passwordVariable: 'NUIX_PASSWORD',
                                usernameVariable: 'NUIX_USER')]) {

                            dir("${WORKSPACE}\\NX") {
                                bat "call gradlew -PnuixDependencyRepo=\"${dependencyRepo}\" -PnuixEngineDir=\"${WORKSPACE}\\${releasePath}\" -PtempDir=\"${TEST_TEMP_PATH}\" integrationTest"
                            }
                        }
                    }
                }

                stage("JAR") {
                    steps {
                        dir("${WORKSPACE}\\NX") {
                            bat 'call gradlew -Pversion=%PROJ_VERSION% jar'
                        }
                        archiveArtifacts artifacts: 'Nx/build/libs/*.jar',
                                allowEmptyArchive: true,
                                fingerprint: true,
                                onlyIfSuccessful: true
                    }
                }

                stage("Publish") {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'ArtifactorySLUKE',
                                passwordVariable: 'ArtifactoryToken',
                                usernameVariable: 'ArtifactoryUser')]) {

                            dir("${WORKSPACE}\\NX") {
                                bat "call gradlew  -PnuixEngineDir=\"${WORKSPACE}\\${releasePath}\" -Pversion=%PROJ_VERSION% -PartifactRepo=\"innovation-proserv-dev-local\" artifactoryPublish"
                            }
                        }

                    }
                }

            }
        }
    }
    post {
        always {
            junit allowEmptyResults: true,
                    testResults: 'Nx/build/test-results/**/*.xml'
        }
    }

}